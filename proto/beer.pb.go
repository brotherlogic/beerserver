// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.13.0
// source: beer.proto

package beerserver

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Extraction int32

const (
	Extraction_UNKNOWN         Extraction = 0
	Extraction_ON_DATE         Extraction = 1
	Extraction_STASH_REMOVE    Extraction = 2
	Extraction_HOMEBREW_REMOVE Extraction = 3
)

// Enum value maps for Extraction.
var (
	Extraction_name = map[int32]string{
		0: "UNKNOWN",
		1: "ON_DATE",
		2: "STASH_REMOVE",
		3: "HOMEBREW_REMOVE",
	}
	Extraction_value = map[string]int32{
		"UNKNOWN":         0,
		"ON_DATE":         1,
		"STASH_REMOVE":    2,
		"HOMEBREW_REMOVE": 3,
	}
)

func (x Extraction) Enum() *Extraction {
	p := new(Extraction)
	*p = x
	return p
}

func (x Extraction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Extraction) Descriptor() protoreflect.EnumDescriptor {
	return file_beer_proto_enumTypes[0].Descriptor()
}

func (Extraction) Type() protoreflect.EnumType {
	return &file_beer_proto_enumTypes[0]
}

func (x Extraction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Extraction.Descriptor instead.
func (Extraction) EnumDescriptor() ([]byte, []int) {
	return file_beer_proto_rawDescGZIP(), []int{0}
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_beer_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_beer_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_beer_proto_rawDescGZIP(), []int{0}
}

type Token struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Secret string `protobuf:"bytes,2,opt,name=secret,proto3" json:"secret,omitempty"`
	Rtoken string `protobuf:"bytes,3,opt,name=rtoken,proto3" json:"rtoken,omitempty"`
}

func (x *Token) Reset() {
	*x = Token{}
	if protoimpl.UnsafeEnabled {
		mi := &file_beer_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Token) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Token) ProtoMessage() {}

func (x *Token) ProtoReflect() protoreflect.Message {
	mi := &file_beer_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Token.ProtoReflect.Descriptor instead.
func (*Token) Descriptor() ([]byte, []int) {
	return file_beer_proto_rawDescGZIP(), []int{1}
}

func (x *Token) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Token) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

func (x *Token) GetRtoken() string {
	if x != nil {
		return x.Rtoken
	}
	return ""
}

type Config struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token    *Token  `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Drunk    []*Beer `protobuf:"bytes,2,rep,name=drunk,proto3" json:"drunk,omitempty"`
	Cellar   *Cellar `protobuf:"bytes,3,opt,name=cellar,proto3" json:"cellar,omitempty"`
	LastSync int64   `protobuf:"varint,4,opt,name=last_sync,json=lastSync,proto3" json:"last_sync,omitempty"`
}

func (x *Config) Reset() {
	*x = Config{}
	if protoimpl.UnsafeEnabled {
		mi := &file_beer_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config) ProtoMessage() {}

func (x *Config) ProtoReflect() protoreflect.Message {
	mi := &file_beer_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config.ProtoReflect.Descriptor instead.
func (*Config) Descriptor() ([]byte, []int) {
	return file_beer_proto_rawDescGZIP(), []int{2}
}

func (x *Config) GetToken() *Token {
	if x != nil {
		return x.Token
	}
	return nil
}

func (x *Config) GetDrunk() []*Beer {
	if x != nil {
		return x.Drunk
	}
	return nil
}

func (x *Config) GetCellar() *Cellar {
	if x != nil {
		return x.Cellar
	}
	return nil
}

func (x *Config) GetLastSync() int64 {
	if x != nil {
		return x.LastSync
	}
	return 0
}

type Beer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	DrinkDate int64   `protobuf:"varint,2,opt,name=drink_date,json=drinkDate,proto3" json:"drink_date,omitempty"`
	Size      string  `protobuf:"bytes,3,opt,name=size,proto3" json:"size,omitempty"`
	Name      string  `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	OnDeck    bool    `protobuf:"varint,5,opt,name=on_deck,json=onDeck,proto3" json:"on_deck,omitempty"`
	Abv       float32 `protobuf:"fixed32,6,opt,name=abv,proto3" json:"abv,omitempty"`
	Index     int32   `protobuf:"varint,7,opt,name=index,proto3" json:"index,omitempty"`
	CheckinId int32   `protobuf:"varint,8,opt,name=checkin_id,json=checkinId,proto3" json:"checkin_id,omitempty"`
	InCellar  int32   `protobuf:"varint,9,opt,name=in_cellar,json=inCellar,proto3" json:"in_cellar,omitempty"`
	Uid       int64   `protobuf:"varint,10,opt,name=uid,proto3" json:"uid,omitempty"`
	BreweryId int32   `protobuf:"varint,11,opt,name=brewery_id,json=breweryId,proto3" json:"brewery_id,omitempty"`
	Order     int32   `protobuf:"varint,12,opt,name=order,proto3" json:"order,omitempty"`
}

func (x *Beer) Reset() {
	*x = Beer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_beer_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Beer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Beer) ProtoMessage() {}

func (x *Beer) ProtoReflect() protoreflect.Message {
	mi := &file_beer_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Beer.ProtoReflect.Descriptor instead.
func (*Beer) Descriptor() ([]byte, []int) {
	return file_beer_proto_rawDescGZIP(), []int{3}
}

func (x *Beer) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Beer) GetDrinkDate() int64 {
	if x != nil {
		return x.DrinkDate
	}
	return 0
}

func (x *Beer) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

func (x *Beer) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Beer) GetOnDeck() bool {
	if x != nil {
		return x.OnDeck
	}
	return false
}

func (x *Beer) GetAbv() float32 {
	if x != nil {
		return x.Abv
	}
	return 0
}

func (x *Beer) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *Beer) GetCheckinId() int32 {
	if x != nil {
		return x.CheckinId
	}
	return 0
}

func (x *Beer) GetInCellar() int32 {
	if x != nil {
		return x.InCellar
	}
	return 0
}

func (x *Beer) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *Beer) GetBreweryId() int32 {
	if x != nil {
		return x.BreweryId
	}
	return 0
}

func (x *Beer) GetOrder() int32 {
	if x != nil {
		return x.Order
	}
	return 0
}

type CellarSlot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Accepts  string  `protobuf:"bytes,1,opt,name=accepts,proto3" json:"accepts,omitempty"`
	NumSlots int32   `protobuf:"varint,2,opt,name=num_slots,json=numSlots,proto3" json:"num_slots,omitempty"`
	Beers    []*Beer `protobuf:"bytes,3,rep,name=beers,proto3" json:"beers,omitempty"`
	// The cellar to move to on extraction - empty means deck
	MoveTo string `protobuf:"bytes,4,opt,name=move_to,json=moveTo,proto3" json:"move_to,omitempty"`
	// How do we choose which beer to extract
	ExtractionAlgorithm Extraction `protobuf:"varint,5,opt,name=extraction_algorithm,json=extractionAlgorithm,proto3,enum=beerserver.Extraction" json:"extraction_algorithm,omitempty"`
	LastShuffleDate     int64      `protobuf:"varint,6,opt,name=last_shuffle_date,json=lastShuffleDate,proto3" json:"last_shuffle_date,omitempty"`
}

func (x *CellarSlot) Reset() {
	*x = CellarSlot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_beer_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CellarSlot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CellarSlot) ProtoMessage() {}

func (x *CellarSlot) ProtoReflect() protoreflect.Message {
	mi := &file_beer_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CellarSlot.ProtoReflect.Descriptor instead.
func (*CellarSlot) Descriptor() ([]byte, []int) {
	return file_beer_proto_rawDescGZIP(), []int{4}
}

func (x *CellarSlot) GetAccepts() string {
	if x != nil {
		return x.Accepts
	}
	return ""
}

func (x *CellarSlot) GetNumSlots() int32 {
	if x != nil {
		return x.NumSlots
	}
	return 0
}

func (x *CellarSlot) GetBeers() []*Beer {
	if x != nil {
		return x.Beers
	}
	return nil
}

func (x *CellarSlot) GetMoveTo() string {
	if x != nil {
		return x.MoveTo
	}
	return ""
}

func (x *CellarSlot) GetExtractionAlgorithm() Extraction {
	if x != nil {
		return x.ExtractionAlgorithm
	}
	return Extraction_UNKNOWN
}

func (x *CellarSlot) GetLastShuffleDate() int64 {
	if x != nil {
		return x.LastShuffleDate
	}
	return 0
}

type Cellar struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Slots  []*CellarSlot `protobuf:"bytes,1,rep,name=slots,proto3" json:"slots,omitempty"`
	OnDeck []*Beer       `protobuf:"bytes,2,rep,name=on_deck,json=onDeck,proto3" json:"on_deck,omitempty"`
}

func (x *Cellar) Reset() {
	*x = Cellar{}
	if protoimpl.UnsafeEnabled {
		mi := &file_beer_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cellar) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cellar) ProtoMessage() {}

func (x *Cellar) ProtoReflect() protoreflect.Message {
	mi := &file_beer_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cellar.ProtoReflect.Descriptor instead.
func (*Cellar) Descriptor() ([]byte, []int) {
	return file_beer_proto_rawDescGZIP(), []int{5}
}

func (x *Cellar) GetSlots() []*CellarSlot {
	if x != nil {
		return x.Slots
	}
	return nil
}

func (x *Cellar) GetOnDeck() []*Beer {
	if x != nil {
		return x.OnDeck
	}
	return nil
}

type AddBeerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Beer     *Beer `protobuf:"bytes,1,opt,name=beer,proto3" json:"beer,omitempty"`
	Quantity int32 `protobuf:"varint,2,opt,name=quantity,proto3" json:"quantity,omitempty"`
}

func (x *AddBeerRequest) Reset() {
	*x = AddBeerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_beer_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddBeerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddBeerRequest) ProtoMessage() {}

func (x *AddBeerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_beer_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddBeerRequest.ProtoReflect.Descriptor instead.
func (*AddBeerRequest) Descriptor() ([]byte, []int) {
	return file_beer_proto_rawDescGZIP(), []int{6}
}

func (x *AddBeerRequest) GetBeer() *Beer {
	if x != nil {
		return x.Beer
	}
	return nil
}

func (x *AddBeerRequest) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

type AddBeerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddBeerResponse) Reset() {
	*x = AddBeerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_beer_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddBeerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddBeerResponse) ProtoMessage() {}

func (x *AddBeerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_beer_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddBeerResponse.ProtoReflect.Descriptor instead.
func (*AddBeerResponse) Descriptor() ([]byte, []int) {
	return file_beer_proto_rawDescGZIP(), []int{7}
}

type ListBeerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OnDeck bool `protobuf:"varint,1,opt,name=on_deck,json=onDeck,proto3" json:"on_deck,omitempty"`
}

func (x *ListBeerRequest) Reset() {
	*x = ListBeerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_beer_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListBeerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBeerRequest) ProtoMessage() {}

func (x *ListBeerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_beer_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBeerRequest.ProtoReflect.Descriptor instead.
func (*ListBeerRequest) Descriptor() ([]byte, []int) {
	return file_beer_proto_rawDescGZIP(), []int{8}
}

func (x *ListBeerRequest) GetOnDeck() bool {
	if x != nil {
		return x.OnDeck
	}
	return false
}

type ListBeerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Beers []*Beer `protobuf:"bytes,1,rep,name=beers,proto3" json:"beers,omitempty"`
}

func (x *ListBeerResponse) Reset() {
	*x = ListBeerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_beer_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListBeerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBeerResponse) ProtoMessage() {}

func (x *ListBeerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_beer_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBeerResponse.ProtoReflect.Descriptor instead.
func (*ListBeerResponse) Descriptor() ([]byte, []int) {
	return file_beer_proto_rawDescGZIP(), []int{9}
}

func (x *ListBeerResponse) GetBeers() []*Beer {
	if x != nil {
		return x.Beers
	}
	return nil
}

type DeleteBeerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid int64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *DeleteBeerRequest) Reset() {
	*x = DeleteBeerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_beer_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteBeerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteBeerRequest) ProtoMessage() {}

func (x *DeleteBeerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_beer_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteBeerRequest.ProtoReflect.Descriptor instead.
func (*DeleteBeerRequest) Descriptor() ([]byte, []int) {
	return file_beer_proto_rawDescGZIP(), []int{10}
}

func (x *DeleteBeerRequest) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

type DeleteBeerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteBeerResponse) Reset() {
	*x = DeleteBeerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_beer_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteBeerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteBeerResponse) ProtoMessage() {}

func (x *DeleteBeerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_beer_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteBeerResponse.ProtoReflect.Descriptor instead.
func (*DeleteBeerResponse) Descriptor() ([]byte, []int) {
	return file_beer_proto_rawDescGZIP(), []int{11}
}

type ConsolidateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ConsolidateRequest) Reset() {
	*x = ConsolidateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_beer_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConsolidateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConsolidateRequest) ProtoMessage() {}

func (x *ConsolidateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_beer_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConsolidateRequest.ProtoReflect.Descriptor instead.
func (*ConsolidateRequest) Descriptor() ([]byte, []int) {
	return file_beer_proto_rawDescGZIP(), []int{12}
}

type ConsolidateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Config *Config `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *ConsolidateResponse) Reset() {
	*x = ConsolidateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_beer_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConsolidateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConsolidateResponse) ProtoMessage() {}

func (x *ConsolidateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_beer_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConsolidateResponse.ProtoReflect.Descriptor instead.
func (*ConsolidateResponse) Descriptor() ([]byte, []int) {
	return file_beer_proto_rawDescGZIP(), []int{13}
}

func (x *ConsolidateResponse) GetConfig() *Config {
	if x != nil {
		return x.Config
	}
	return nil
}

type UpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateRequest) Reset() {
	*x = UpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_beer_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRequest) ProtoMessage() {}

func (x *UpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_beer_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRequest.ProtoReflect.Descriptor instead.
func (*UpdateRequest) Descriptor() ([]byte, []int) {
	return file_beer_proto_rawDescGZIP(), []int{14}
}

type UpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateResponse) Reset() {
	*x = UpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_beer_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateResponse) ProtoMessage() {}

func (x *UpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_beer_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateResponse.ProtoReflect.Descriptor instead.
func (*UpdateResponse) Descriptor() ([]byte, []int) {
	return file_beer_proto_rawDescGZIP(), []int{15}
}

var File_beer_proto protoreflect.FileDescriptor

var file_beer_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x62, 0x65, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x62, 0x65,
	0x65, 0x72, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x47, 0x0a, 0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xa2, 0x01, 0x0a, 0x06, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x27, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x62, 0x65, 0x65, 0x72, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x26,
	0x0a, 0x05, 0x64, 0x72, 0x75, 0x6e, 0x6b, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x62, 0x65, 0x65, 0x72, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x42, 0x65, 0x65, 0x72, 0x52,
	0x05, 0x64, 0x72, 0x75, 0x6e, 0x6b, 0x12, 0x2a, 0x0a, 0x06, 0x63, 0x65, 0x6c, 0x6c, 0x61, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x62, 0x65, 0x65, 0x72, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2e, 0x43, 0x65, 0x6c, 0x6c, 0x61, 0x72, 0x52, 0x06, 0x63, 0x65, 0x6c, 0x6c,
	0x61, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x22,
	0xa1, 0x02, 0x0a, 0x04, 0x42, 0x65, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x72, 0x69, 0x6e,
	0x6b, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x64, 0x72,
	0x69, 0x6e, 0x6b, 0x44, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x17, 0x0a, 0x07, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x63, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x6f, 0x6e, 0x44, 0x65, 0x63, 0x6b, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x62, 0x76, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x61, 0x62, 0x76, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x49, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x69, 0x6e, 0x5f, 0x63, 0x65, 0x6c, 0x6c, 0x61, 0x72, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x69, 0x6e, 0x43, 0x65, 0x6c, 0x6c, 0x61, 0x72, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x62, 0x72, 0x65, 0x77, 0x65, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x62, 0x72, 0x65, 0x77, 0x65, 0x72, 0x79, 0x49, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x22, 0xfb, 0x01, 0x0a, 0x0a, 0x43, 0x65, 0x6c, 0x6c, 0x61, 0x72, 0x53, 0x6c,
	0x6f, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x73, 0x12, 0x1b, 0x0a, 0x09,
	0x6e, 0x75, 0x6d, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x6e, 0x75, 0x6d, 0x53, 0x6c, 0x6f, 0x74, 0x73, 0x12, 0x26, 0x0a, 0x05, 0x62, 0x65, 0x65,
	0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x62, 0x65, 0x65, 0x72, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x42, 0x65, 0x65, 0x72, 0x52, 0x05, 0x62, 0x65, 0x65, 0x72,
	0x73, 0x12, 0x17, 0x0a, 0x07, 0x6d, 0x6f, 0x76, 0x65, 0x5f, 0x74, 0x6f, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f, 0x76, 0x65, 0x54, 0x6f, 0x12, 0x49, 0x0a, 0x14, 0x65, 0x78,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74,
	0x68, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x62, 0x65, 0x65, 0x72, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x13, 0x65, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x67, 0x6f,
	0x72, 0x69, 0x74, 0x68, 0x6d, 0x12, 0x2a, 0x0a, 0x11, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x73, 0x68,
	0x75, 0x66, 0x66, 0x6c, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x53, 0x68, 0x75, 0x66, 0x66, 0x6c, 0x65, 0x44, 0x61, 0x74,
	0x65, 0x22, 0x61, 0x0a, 0x06, 0x43, 0x65, 0x6c, 0x6c, 0x61, 0x72, 0x12, 0x2c, 0x0a, 0x05, 0x73,
	0x6c, 0x6f, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x62, 0x65, 0x65,
	0x72, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x43, 0x65, 0x6c, 0x6c, 0x61, 0x72, 0x53, 0x6c,
	0x6f, 0x74, 0x52, 0x05, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x12, 0x29, 0x0a, 0x07, 0x6f, 0x6e, 0x5f,
	0x64, 0x65, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x62, 0x65, 0x65,
	0x72, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x42, 0x65, 0x65, 0x72, 0x52, 0x06, 0x6f, 0x6e,
	0x44, 0x65, 0x63, 0x6b, 0x22, 0x52, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x42, 0x65, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x04, 0x62, 0x65, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x62, 0x65, 0x65, 0x72, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x42, 0x65, 0x65, 0x72, 0x52, 0x04, 0x62, 0x65, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08,
	0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x11, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x42,
	0x65, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2a, 0x0a, 0x0f, 0x4c,
	0x69, 0x73, 0x74, 0x42, 0x65, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17,
	0x0a, 0x07, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x06, 0x6f, 0x6e, 0x44, 0x65, 0x63, 0x6b, 0x22, 0x3a, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x42,
	0x65, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x05, 0x62,
	0x65, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x62, 0x65, 0x65,
	0x72, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x42, 0x65, 0x65, 0x72, 0x52, 0x05, 0x62, 0x65,
	0x65, 0x72, 0x73, 0x22, 0x25, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x65, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0x14, 0x0a, 0x12, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x42, 0x65, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x14, 0x0a, 0x12, 0x43, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x41, 0x0a, 0x13, 0x43, 0x6f, 0x6e, 0x73, 0x6f, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a,
	0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x62, 0x65, 0x65, 0x72, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x0f, 0x0a, 0x0d, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x10, 0x0a, 0x0e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2a, 0x4d, 0x0a, 0x0a,
	0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e,
	0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x4f, 0x4e, 0x5f, 0x44, 0x41,
	0x54, 0x45, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x54, 0x41, 0x53, 0x48, 0x5f, 0x52, 0x45,
	0x4d, 0x4f, 0x56, 0x45, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x48, 0x4f, 0x4d, 0x45, 0x42, 0x52,
	0x45, 0x57, 0x5f, 0x52, 0x45, 0x4d, 0x4f, 0x56, 0x45, 0x10, 0x03, 0x32, 0x87, 0x03, 0x0a, 0x11,
	0x42, 0x65, 0x65, 0x72, 0x43, 0x65, 0x6c, 0x6c, 0x61, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x44, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x42, 0x65, 0x65, 0x72, 0x12, 0x1a, 0x2e, 0x62,
	0x65, 0x65, 0x72, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x41, 0x64, 0x64, 0x42, 0x65, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x62, 0x65, 0x65, 0x72, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x41, 0x64, 0x64, 0x42, 0x65, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x42, 0x65, 0x65, 0x72, 0x12, 0x1d, 0x2e, 0x62, 0x65, 0x65, 0x72, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x65, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x62, 0x65, 0x65, 0x72, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x65, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x09, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x65,
	0x65, 0x72, 0x73, 0x12, 0x1b, 0x2e, 0x62, 0x65, 0x65, 0x72, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x65, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1c, 0x2e, 0x62, 0x65, 0x65, 0x72, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x42, 0x65, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x50, 0x0a, 0x0b, 0x43, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x12,
	0x1e, 0x2e, 0x62, 0x65, 0x65, 0x72, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6e,
	0x73, 0x6f, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1f, 0x2e, 0x62, 0x65, 0x65, 0x72, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6e,
	0x73, 0x6f, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x41, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x19, 0x2e, 0x62,
	0x65, 0x65, 0x72, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x62, 0x65, 0x65, 0x72, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x24, 0x5a, 0x22, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x72, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x6c, 0x6f, 0x67, 0x69, 0x63,
	0x2f, 0x62, 0x65, 0x65, 0x72, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_beer_proto_rawDescOnce sync.Once
	file_beer_proto_rawDescData = file_beer_proto_rawDesc
)

func file_beer_proto_rawDescGZIP() []byte {
	file_beer_proto_rawDescOnce.Do(func() {
		file_beer_proto_rawDescData = protoimpl.X.CompressGZIP(file_beer_proto_rawDescData)
	})
	return file_beer_proto_rawDescData
}

var file_beer_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_beer_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_beer_proto_goTypes = []interface{}{
	(Extraction)(0),             // 0: beerserver.Extraction
	(*Empty)(nil),               // 1: beerserver.Empty
	(*Token)(nil),               // 2: beerserver.Token
	(*Config)(nil),              // 3: beerserver.Config
	(*Beer)(nil),                // 4: beerserver.Beer
	(*CellarSlot)(nil),          // 5: beerserver.CellarSlot
	(*Cellar)(nil),              // 6: beerserver.Cellar
	(*AddBeerRequest)(nil),      // 7: beerserver.AddBeerRequest
	(*AddBeerResponse)(nil),     // 8: beerserver.AddBeerResponse
	(*ListBeerRequest)(nil),     // 9: beerserver.ListBeerRequest
	(*ListBeerResponse)(nil),    // 10: beerserver.ListBeerResponse
	(*DeleteBeerRequest)(nil),   // 11: beerserver.DeleteBeerRequest
	(*DeleteBeerResponse)(nil),  // 12: beerserver.DeleteBeerResponse
	(*ConsolidateRequest)(nil),  // 13: beerserver.ConsolidateRequest
	(*ConsolidateResponse)(nil), // 14: beerserver.ConsolidateResponse
	(*UpdateRequest)(nil),       // 15: beerserver.UpdateRequest
	(*UpdateResponse)(nil),      // 16: beerserver.UpdateResponse
}
var file_beer_proto_depIdxs = []int32{
	2,  // 0: beerserver.Config.token:type_name -> beerserver.Token
	4,  // 1: beerserver.Config.drunk:type_name -> beerserver.Beer
	6,  // 2: beerserver.Config.cellar:type_name -> beerserver.Cellar
	4,  // 3: beerserver.CellarSlot.beers:type_name -> beerserver.Beer
	0,  // 4: beerserver.CellarSlot.extraction_algorithm:type_name -> beerserver.Extraction
	5,  // 5: beerserver.Cellar.slots:type_name -> beerserver.CellarSlot
	4,  // 6: beerserver.Cellar.on_deck:type_name -> beerserver.Beer
	4,  // 7: beerserver.AddBeerRequest.beer:type_name -> beerserver.Beer
	4,  // 8: beerserver.ListBeerResponse.beers:type_name -> beerserver.Beer
	3,  // 9: beerserver.ConsolidateResponse.config:type_name -> beerserver.Config
	7,  // 10: beerserver.BeerCellarService.AddBeer:input_type -> beerserver.AddBeerRequest
	11, // 11: beerserver.BeerCellarService.DeleteBeer:input_type -> beerserver.DeleteBeerRequest
	9,  // 12: beerserver.BeerCellarService.ListBeers:input_type -> beerserver.ListBeerRequest
	13, // 13: beerserver.BeerCellarService.Consolidate:input_type -> beerserver.ConsolidateRequest
	15, // 14: beerserver.BeerCellarService.Update:input_type -> beerserver.UpdateRequest
	8,  // 15: beerserver.BeerCellarService.AddBeer:output_type -> beerserver.AddBeerResponse
	12, // 16: beerserver.BeerCellarService.DeleteBeer:output_type -> beerserver.DeleteBeerResponse
	10, // 17: beerserver.BeerCellarService.ListBeers:output_type -> beerserver.ListBeerResponse
	14, // 18: beerserver.BeerCellarService.Consolidate:output_type -> beerserver.ConsolidateResponse
	16, // 19: beerserver.BeerCellarService.Update:output_type -> beerserver.UpdateResponse
	15, // [15:20] is the sub-list for method output_type
	10, // [10:15] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_beer_proto_init() }
func file_beer_proto_init() {
	if File_beer_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_beer_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_beer_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Token); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_beer_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Config); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_beer_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Beer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_beer_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CellarSlot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_beer_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cellar); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_beer_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddBeerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_beer_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddBeerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_beer_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListBeerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_beer_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListBeerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_beer_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteBeerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_beer_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteBeerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_beer_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConsolidateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_beer_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConsolidateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_beer_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_beer_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_beer_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_beer_proto_goTypes,
		DependencyIndexes: file_beer_proto_depIdxs,
		EnumInfos:         file_beer_proto_enumTypes,
		MessageInfos:      file_beer_proto_msgTypes,
	}.Build()
	File_beer_proto = out.File
	file_beer_proto_rawDesc = nil
	file_beer_proto_goTypes = nil
	file_beer_proto_depIdxs = nil
}
